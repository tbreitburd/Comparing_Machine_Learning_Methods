# M1 Applied Data Science Coursework  

## Description  
This repositery contains the code and written report for the M1 ADS coursework. The aim was to demonstrate the applications of machine learning methods.

## Contents  
Inside this ```tmb76/``` directory, there are 3 sub-directories to explore. One is the code directory (```src/```), which contains all the code used to generate the results and plots. The second is the plots directory (```plots/```), which contains all the plots generated by the code. An important note is that the plots directry will be created by the code if it does not exist yet. So if there is no plots directory in the repository yet, running all the code should lead to creating and filling one. The last one is the report directory, which contains the LaTeX file for the report, as well as the pdf version of it.  
More importantly, there are an ```environment.yml``` file and a ```Dockerfile```, which uses it, and one is advised to use.

## How to run the code
For permissions reasons, the ```Dockerfile``` is not set up to pull the repository directly as it builds the image. Therefore, one must first pull this repository to their local machine and then are free to build the Docker image from the ```Dockerfile```, using the following command:

```bash
$ docker build -t adscw .
$ docker run -ti --name=adscw_container adscw
```

The given image name is not a requirement, it can be set to any valid name. The 2nd line does not use ```--rm```, which means the container will not be removed once exited. This is so that once the code is run on the container the plots directory can be copied back to the local machine using this command after using ```exit``` to exit the container:

```bash
$ docker cp adscw_container:/M1_Coursework/plots ./plots
```

This means the container can and should be removed after the plots have been copied:

```bash
$ docker rm adscw_container
```

All code can be run from the command line (in the container) as follows:

```bash
$ python src/SecA_Q*.py
$ python src/SecB_Q*.py
```

where * can be digits 1, 2, and 3 for the first line, and 4 or 5 for the second line.
Additionally, there is a ```Plot_funcs.py``` file which covers all the plotting functions used in the ```Sec[AB]_Q*.py``` files

Relevant outputs will be printed by the code, and any plots generated will be saved to the ```plots/``` directory inside ```tmb76/```, that will get created if it doesn't exist yet.

This can all be done within a Docker container, by building an image from the ```Dockerfile```, and running a container from it. 

From there, all files can be run in the same manner as above.

## Note on time

The codes for all questions should take less than a minute to run. With the exception of Question 2 which takes a few minutes. This is based on running all of these on a MacBook Air M2 (2022, Ventura 13.2.1), with 8 GB of Memory.

## Use of generative AI

Copilot's autocompletion feature was used in coding the project, when writing docstrings for the functions, and when covering repetitive parts of the code, like part (f) and (g)'s hypothesis testing.
ChatGPT was used to help in debugging the code, by providing the tracebacks when an error was difficult to understand.